# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        include:
          - {angular: {version: 19.0.0, devkit-version: 0.1900.0}, node: {version: 18.19.1, types-version: 18.19.1}}
          - {angular: {version: 19.0.0, devkit-version: 0.1900.0}, node: {version: 20.x, types-version: 20.17.6}}
          - {angular: {version: 19.0.0, devkit-version: 0.1900.0}, node: {version: 22.x, types-version: 22.9.1}}
          - {angular: {version: 20.0.0, devkit-version: 0.2000.0}, node: {version: 20.x, types-version: 20.17.6}}
          - {angular: {version: 20.0.0, devkit-version: 0.2000.0}, node: {version: 22.x, types-version: 22.9.1}}
          - {angular: {version: 20.0.0, devkit-version: 0.2000.0}, node: {version: 24.x, types-version: 22.9.1}}

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node.version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node.version }}
    - run: rm package-lock.json # otherwise we cannot overwrite the peerDependencies version of @angular-devkit/build-angular below
    - run: npm i --save-exact "@types/node@${{ matrix.node.types-version }}" "@angular-devkit/architect@${{ matrix.angular.devkit-version }}" "@angular-devkit/core@${{ matrix.angular.version }}" "@angular-devkit/schematics@${{ matrix.angular.version }}" "@schematics/angular@${{ matrix.angular.version }}" "@angular-devkit/build-angular@${{ matrix.angular.version }}" "@angular/core@${{ matrix.angular.version }}" "@angular/compiler-cli@${{ matrix.angular.version }}"
    - run: npm i
    - run: npm ls || true
    - run: npm run build
    - run: npm run test-coverage
    - name: Coveralls
      uses: coverallsapp/github-action@v1.1.2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        flag-name: run-${{ matrix.node.version }}
        parallel: true

  finish:
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@v1.1.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
